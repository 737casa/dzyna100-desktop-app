[{"C:\\Software\\dzyna100-desktop-app\\src\\index.tsx":"1","C:\\Software\\dzyna100-desktop-app\\src\\reportWebVitals.ts":"2","C:\\Software\\dzyna100-desktop-app\\src\\App.tsx":"3","C:\\Software\\dzyna100-desktop-app\\src\\Login.tsx":"4","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Accounts.tsx":"5","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Products.tsx":"6","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Select2.tsx":"7","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2.tsx":"8","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.ts":"9","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Chatbot2.tsx":"10","C:\\Software\\dzyna100-desktop-app\\src\\lib\\faker2.ts":"11","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Helpers.ts":"12","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Puppeteer.tsx":"13","C:\\Software\\dzyna100-desktop-app\\src\\api.ts":"14","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Users.tsx":"15","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Release.dev.tsx":"16","C:\\Software\\dzyna100-desktop-app\\src\\firebaseConfig.ts":"17","C:\\Software\\dzyna100-desktop-app\\src\\helpers.ts":"18","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.dev.ts":"19"},{"size":1458,"mtime":1611830321947,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":859,"mtime":1611826647762,"results":"23","hashOfConfig":"21"},{"size":2540,"mtime":1611826647762,"results":"24","hashOfConfig":"21"},{"size":2229,"mtime":1611826647770,"results":"25","hashOfConfig":"21"},{"size":3483,"mtime":1611831348513,"results":"26","hashOfConfig":"21"},{"size":611,"mtime":1611826647769,"results":"27","hashOfConfig":"21"},{"size":5151,"mtime":1611826647767,"results":"28","hashOfConfig":"21"},{"size":909,"mtime":1611826647769,"results":"29","hashOfConfig":"21"},{"size":5042,"mtime":1611290937282,"results":"30","hashOfConfig":"21"},{"size":472,"mtime":1611826647769,"results":"31","hashOfConfig":"21"},{"size":6531,"mtime":1611826647768,"results":"32","hashOfConfig":"21"},{"size":1824,"mtime":1611826647771,"results":"33","hashOfConfig":"21"},{"size":4192,"mtime":1611826647763,"results":"34","hashOfConfig":"21"},{"size":1882,"mtime":1611826647772,"results":"35","hashOfConfig":"21"},{"size":2196,"mtime":1611826647771,"results":"36","hashOfConfig":"21"},{"size":420,"mtime":1611831390770,"results":"37","hashOfConfig":"21"},{"size":1921,"mtime":1611828471627,"results":"38","hashOfConfig":"21"},{"size":5794,"mtime":1611826235564,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ntlgl3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"C:\\Software\\dzyna100-desktop-app\\src\\index.tsx",[],["90","91"],"C:\\Software\\dzyna100-desktop-app\\src\\reportWebVitals.ts",[],["92","93"],"C:\\Software\\dzyna100-desktop-app\\src\\App.tsx",["94"],"import React, {useEffect, createContext, useState} from \"react\";\r\nimport {Router2,createRoutes} from \"@7casa/clib22-helpers\";\r\nimport {adminMenus, appTitle} from \"./helpers\";\r\n\r\n\r\nexport default function App(){\r\n\r\n    const [title,setTitle] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        appTitle().then(setTitle)\r\n    },[])\r\n\r\n\r\n    const authorise = () => {\r\n        return adminMenus()\r\n    }\r\n\r\n\r\n    const routes = createRoutes([\"accounts\",\"products\",\"users\",\"puppeteer\"]).map((f => {\r\n        if (f.uid === \"licences\" || f.uid === \"puppeteer\"){\r\n            return ({\r\n                ...f,\r\n                auth:authorise,\r\n            })\r\n        } else {\r\n            return f\r\n        }\r\n    }))\r\n\r\n    return (\r\n        <Router2 routes={routes} importFn={(file) => import(`./pages/${file}`)} logo={{type:\"image\",value:title}} />\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\Login.tsx",["95","96","97","98","99"],"import React, {FormEvent, useEffect, useState} from \"react\"\r\nimport {Row, Container, Form, InputGroup, FormControl, Button, Spinner} from \"react-bootstrap\";\r\nimport App from \"./App\";\r\nimport firebase from \"firebase/app\"\r\nimport \"firebaseui/dist/firebaseui.css\"\r\n\r\nexport default function Login(){\r\n    const [authorisation, setAuthorisation] = useState<\"loading\" | \"authorised\" | \"not authorised\">(\"loading\")\r\n\r\n    useEffect(() => {\r\n        window.auth.onAuthStateChanged(function(user) {\r\n          if(user) {\r\n              if(user.email){\r\n                  window.api.createCrud(\"users\",\"\").post({\r\n                      id:user.email,\r\n                      displayName:user.displayName,\r\n                      email:user.email,\r\n                  })\r\n              }\r\n              setAuthorisation(\"authorised\")\r\n          } else {\r\n              setAuthorisation(\"not authorised\")\r\n          }\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n       if(authorisation === \"not authorised\"){\r\n           window.firebaseAuthUi.start(\"#login\",{\r\n               callbacks: {\r\n                   signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n                       // User successfully signed in.\r\n                       // Return type determines whether we continue the redirect automatically\r\n                       // or whether we leave that to developer to handle.\r\n                       console.log(authResult)\r\n                       setAuthorisation(\"authorised\")\r\n                       return true\r\n                   },\r\n                   uiShown: function() {\r\n                       // The widget is rendered.\r\n                       // Hide the loader.\r\n                       // document.getElementById('loader').style.display = 'none';\r\n                       setAuthorisation(\"not authorised\")\r\n                   }\r\n               },\r\n               signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,]\r\n           })\r\n       }\r\n    },[authorisation])\r\n\r\n\r\n    if (authorisation === \"authorised\") return <App />\r\n    else\r\n    return (\r\n        <Container>\r\n            <Row className=\"row align-items-center justify-content-center\" style={{height:\"100vh\"}}>\r\n                {authorisation === \"loading\" && (\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                )}\r\n                <div id=\"login\"></div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Accounts.tsx",["100","101","102","103"],"import React, {FormEvent, useCallback, useEffect, useState} from \"react\";\r\nimport {getLid} from \"../helpers\";\r\nimport {Form2,createFields, createFormInputs, createHandleSubmit,Table2} from \"@7casa/clib22-helpers\";\r\n\r\nexport default function Accounts(){\r\n\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"accounts\",getLid())\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'Account',\r\n            columns: [\r\n                {\r\n                    Header:\"Name\",\r\n                    accessor:\"name\",\r\n                },\r\n                {\r\n                    Header:\"Account Holder\",\r\n                    accessor:(d:any) => {\r\n                        const str = `${d.firstName} ${d.lastName}`\r\n                        return str.substr(0,10)+\"...\"\r\n                    },\r\n                },\r\n                {\r\n                    Header:\"Email\",\r\n                    accessor:\"email\",\r\n                },\r\n                {\r\n                    Header:\"Address\",\r\n                    accessor:(d:any) => {\r\n                        const str = `${d.line1}, ${d.line2}`\r\n                        return str.substr(0,20)+\"...\"\r\n                    },\r\n                }\r\n            ],\r\n        }\r\n    ]\r\n\r\n    const fields = createFields([\r\n        \"name\",\r\n        \"first name\",\r\n        \"last name\",\r\n        \"line1\",\r\n        \"line2\",\r\n        \"line3\",\r\n        \"line4\",\r\n        \"email\",\r\n        \"password\",\r\n        \"phone number\",\r\n    ],{allRequired:true, bulk:true})\r\n\r\n    const profileFormConfig = {\r\n        inputs:createFormInputs(fields),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post(data)\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table2\r\n                cols={cols}\r\n                get={get}\r\n                put={put}\r\n                update={false}\r\n                del={del}\r\n                post={post}\r\n                form={\r\n                    ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...profileFormConfig} />\r\n                }\r\n            />\r\n\r\n        </>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Products.tsx",["104","105","106","107","108","109"],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Select2.tsx",["110"],"import React, {useEffect, useState} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\ninterface Select2Props {\r\n    get: () => Promise<any[]>\r\n    defaultValue:string\r\n    name:string\r\n}\r\nexport default function Select2({get,...rest}:Select2Props){\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n        get().then(setData)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Form.Control as=\"select\" custom {...rest}>\r\n            {data.map((f:any) => (\r\n                <option value={`__json${JSON.stringify(f)}`}>{f.name}</option>\r\n            ))}\r\n        </Form.Control>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2.tsx",["111","112","113","114","115"],"import puppeteer, {Browser, Page} from \"puppeteer\";\r\nimport React, {FC, useEffect, useState} from \"react\";\r\nimport {createMenu} from \"@7casa/clib22-helpers\";\r\nimport {browserApp, puppeteerMethods} from \"../helpers\";\r\n\r\ninterface Puppeteer2AccountProps {\r\n    name: string\r\n    firstName:string\r\n    lastName:string\r\n    line1:string\r\n    line2:string\r\n    line3:string\r\n    line4:string\r\n    email:string\r\n    password:string\r\n}\r\n\r\nexport interface Puppeteer2ProductProps {\r\n    link:string\r\n    size:number\r\n    id:string\r\n    releaseDate?:string\r\n    account:Puppeteer2AccountProps\r\n}\r\n\r\ninterface Puppeteer2OptionsProxyProps {\r\n    ipAddress:string\r\n    port:string\r\n    username:string\r\n    password:string\r\n}\r\n\r\ninterface Puppeteer2OptionProxyRotate {\r\n    rotate:boolean\r\n}\r\ninterface Puppeteer2OptionProxySticky {\r\n    sticky:true\r\n    session:\"1\"|\"5\"\r\n}\r\n\r\ntype Puppeteer2OptionProxy = Puppeteer2OptionProxySticky | Puppeteer2OptionProxyRotate\r\n\r\ninterface Puppeteer2Options {\r\n    headless:boolean\r\n    proxy?: Puppeteer2OptionProxy\r\n}\r\n\r\ninterface Puppeteer2ListMenuFunctionProp {\r\n    cleanup: (data:any) => Promise<any>\r\n    menu: string\r\n}\r\n\r\ntype Puppeteer2ListMenuFunction = () => Puppeteer2ListMenuFunctionProp\r\n\r\ninterface Puppeteer2ListProps {\r\n    menus: (string|Puppeteer2ListMenuFunction)[]\r\n    authorise?: () => Promise<boolean>,\r\n    getCode: (name:string) => () => Promise<string>\r\n}\r\n\r\ninterface Puppeteer2Props {\r\n    product:Puppeteer2ProductProps\r\n    options: Puppeteer2Options\r\n    getCode: (name:string) => () => Promise<string>\r\n}\r\n\r\n\r\nexport function createPuppeteer2ListMenuFunction(f:Puppeteer2ListMenuFunctionProp){\r\n    return () => f\r\n}\r\n\r\nfunction random(min:number, max:number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function createPuppeteer2List({menus,getCode}:Puppeteer2ListProps){\r\n    const menu = createMenu(\"puppeteer\")\r\n\r\n    const isString = (f:any) : f is string => {\r\n        return typeof f === \"string\"\r\n    }\r\n    const isFunction = (f:any) : f is Puppeteer2ListMenuFunction => {\r\n        return typeof f !== \"string\"\r\n    }\r\n\r\n    return menus.filter(isString).map(f => {\r\n        return menu.createMenuItem(f,async (product) => {\r\n            const {\r\n                callMethod\r\n            } = createPuppeteer2({product,options:{headless:false, proxy: {sticky:true, session:\"5\"}},getCode})\r\n            const result = await callMethod(f)\r\n            const cleanup = menus.filter(isFunction).filter(m => m().menu === f)\r\n            await Promise.all(cleanup.map(async c => {\r\n                await c().cleanup(result)\r\n            }))\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport function createPuppeteer2({product,options,getCode}:Puppeteer2Props){\r\n\r\n\r\n    let page:Page\r\n\r\n    async function callMethod(method:string){\r\n        const {page,browser} = await setup()\r\n\r\n        const helpers = await (await import(\"./Puppeteer2Helpers\")).default({page,product})\r\n        const resp = puppeteerMethods({page,product,helpers,browser,getCode:getCode(method),method})\r\n        delete require.cache[require.resolve(\"./Puppeteer2Helpers\")]\r\n        return resp\r\n    }\r\n\r\n    async function GetProxy(proxyType:Puppeteer2OptionProxy):Promise<Puppeteer2OptionsProxyProps>{\r\n\r\n        console.log(proxyType,\"proxyType\")\r\n\r\n\r\n        const adminProxies = ({\r\n            ipAddress:\"\",\r\n            port:\"\",\r\n            username:\"\",\r\n            password:\"\"\r\n        })\r\n\r\n        return adminProxies\r\n\r\n    }\r\n\r\n    async function setup() {\r\n        const url = new URL(product.link)\r\n        const browserId = \"browser-\"+product.id\r\n        const pageId = \"page-\"+product.id\r\n\r\n        const proxy = options.proxy && await GetProxy(options.proxy)\r\n        const _browserApp = await browserApp(url)\r\n\r\n        const browser:Browser = window.puppeteer?.[browserId] || await puppeteer.launch({\r\n            executablePath:\"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\",\r\n            headless:options?.headless,\r\n            defaultViewport: null,\r\n            args:[\r\n                '--inprivate',\r\n                _browserApp as string,\r\n                \"--disable-web-security\",\r\n                // `--proxy-server=${proxy?.ipAddress}:${proxy?.port}`,\r\n                \"--allow-file-access-from-files\",\r\n                \"--allow-file-access\",\r\n            ]\r\n        })\r\n\r\n        console.log(proxy,\"mate\")\r\n\r\n        // const context = await browser.createIncognitoBrowserContext();\r\n\r\n        page = window.puppeteer?.[pageId] || (await browser.pages())[0];\r\n        window.puppeteer[browserId] = browser\r\n        window.puppeteer[pageId] = page\r\n\r\n\r\n        if(proxy){\r\n            await page.authenticate({\r\n                username:proxy.username,\r\n                password:proxy.password,\r\n            })\r\n        }\r\n\r\n        browser.on('disconnected',async()=>{\r\n            window.puppeteer[browserId] = null\r\n            window.puppeteer[pageId] = null\r\n        })\r\n\r\n        return ({\r\n            browser,page\r\n        })\r\n    }\r\n\r\n\r\n    return ({\r\n        callMethod\r\n    })\r\n}\r\n\r\n","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Chatbot2.tsx",["116","117","118","119","120"],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\faker2.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Helpers.ts",["121","122","123"],"import {Page} from \"puppeteer\";\r\nimport {Puppeteer2ProductProps} from \"./Puppeteer2\";\r\n\r\nexport interface Puppeteer2HelperProps {\r\n    page?: Page\r\n    product: Puppeteer2ProductProps\r\n}\r\n\r\nexport default async function createPuppeteer2Helpers({page,product}:Puppeteer2HelperProps){\r\n    const faker2 = (await import(\"./faker2\")).default()\r\n\r\n    const is = {\r\n        nike(){\r\n            return product.link.includes(\"nike.com\")\r\n        },\r\n    }\r\n    return ({\r\n        faker:faker2,\r\n        get: {\r\n            releaseDate(text:string){\r\n                if(is.nike()){\r\n                    const [_1,my,_2,time] = text.split(\" \")\r\n                    const [day,month] = my.split(\"/\")\r\n                    const [hour,min] = time.split(\":\")\r\n                    const d = new Date()\r\n                    d.setMonth(Number(month)-1)\r\n                    d.setDate(Number(day))\r\n                    d.setHours(Number(hour))\r\n                    d.setMinutes(Number(min))\r\n                    d.setSeconds(0)\r\n                    const str = d.toISOString().substr(0,16)\r\n                    return str\r\n                } else {\r\n                    throw \"can't get release for unknown store\"\r\n                }\r\n            },\r\n        },\r\n        is,\r\n        ...(page && {\r\n            outlook: {\r\n                select: {\r\n                    async month(number:number){\r\n                        console.log(number,\"peakabook\")\r\n                        switch (number) {\r\n                            case 0: {\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 1: {\r\n                                return await page.keyboard.press(\"F\")\r\n                            }\r\n                            case 2: {\r\n                                return await page.keyboard.press(\"M\")\r\n                            }\r\n                            case 3: {\r\n                                return await page.keyboard.press(\"A\")\r\n                            }\r\n                            case 4:{\r\n                                await page.keyboard.press(\"M\")\r\n                                return await page.keyboard.press(\"M\")\r\n                            }\r\n                            case 5:{\r\n                                await page.keyboard.press(\"J\")\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 6: {\r\n                                await page.keyboard.press(\"J\")\r\n                                await page.keyboard.press(\"J\")\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 7: {\r\n                                await page.keyboard.press(\"A\")\r\n                                return await page.keyboard.press(\"A\")\r\n                            }\r\n                            case 8: {\r\n                                return await page.keyboard.press(\"S\")\r\n                            }\r\n                            case 9:{\r\n                                return await page.keyboard.press(\"O\")\r\n                            }\r\n                            case 10: {\r\n                                return await page.keyboard.press(\"n\")\r\n                            }\r\n                            case 11: {\r\n                                return await page.keyboard.press(\"d\")\r\n                            }\r\n                            default: {\r\n                                console.log(\"outlook/select/month: did not receive valid month -\",number)\r\n                            }\r\n                        }\r\n                    },\r\n                }\r\n            },\r\n            async delay(time:number){\r\n                await page.waitForTimeout(time)\r\n            },\r\n            exists: {\r\n                async text({value,attr,tag}:{value:string,tag:string,attr:string}){\r\n                    try {\r\n                        await page.waitForXPath(`//${tag || \"*\"}[translate(${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true,timeout:8000});\r\n                        return true\r\n                    } catch (e) {\r\n                        return false\r\n                    }\r\n                },\r\n            },\r\n            type: {\r\n                async text({value,text,attr}:{value:string,text:string,attr:string}){\r\n                    await page.waitForXPath(`//*[translate(@${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true});\r\n                    await (await page.$x(`//*[translate(@${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`))[0].type(text,{delay:0})\r\n                },\r\n            },\r\n            click: {\r\n                async tag({tag}:{tag:string}){\r\n                    await page.waitForXPath(`//${tag}`,{visible: true});\r\n                    await (await page.$x(`//${tag}`))[0].click()\r\n                },\r\n                async textExact({text,tag}:{tag?:string,text:string}){\r\n                    await page.waitForXPath(`//${tag || \"*\"}[text()='${text}']`,{visible: true});\r\n                    await (await page.$x(`//${tag || \"*\"}[text()='${text}']`))[0].click()\r\n                },\r\n                async text({value,attr,tag}:{value:string,attr?:string,tag?:string}){\r\n                    console.log(attr || 33,\"bink\")\r\n                    await page.waitForXPath(`//${tag || \"*\"}[translate(${attr || \"text()\"}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true});\r\n                    await (await page.$x(`//${tag || \"*\"}[translate(${attr || \"text()\"}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`))[0].click()\r\n                },\r\n                async containTextExact({text,tag,attr}:{text:string,tag:string,attr:string}){\r\n                    await page.waitForXPath(`//${tag}[contains(${attr}, '${text}')]`, {visible:true})\r\n                    await (await page.$x(`//${tag}[contains(${attr}, '${text}')]`))[0].click()\r\n                }\r\n            },\r\n            select(){\r\n\r\n            },\r\n            press: {\r\n                async tab(){\r\n                    await page.keyboard.press(\"Tab\");\r\n                },\r\n                async type(text:string){\r\n                    await page.keyboard.type(text)\r\n                }\r\n            }\r\n        })\r\n    })\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Puppeteer.tsx",["124"],"import React from \"react\";\r\nimport {getLid} from \"../helpers\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Table2,createComp, createFields, createFormInputs, createHandleSubmit,Form2} from \"@7casa/clib22-helpers\"\r\n\r\n\r\nexport default function Puppeteer(){\r\n\r\n    const lid = getLid()\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"puppeteer\",\"\")\r\n\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'Puppeteer',\r\n            columns: [\r\n                {\r\n                    Header:\"Name\",\r\n                    accessor:\"name\",\r\n                },\r\n                {\r\n                    Header:\"Code\",\r\n                    accessor:(d:any) => d.code.substr(0,20)+\"...\",\r\n                },\r\n            ],\r\n        }\r\n    ]\r\n\r\n\r\n    const fields = createFields([\r\n        \"name\",\r\n        \"code\",\r\n    ],{allRequired:true})\r\n\r\n    const formConfig = {\r\n        inputs:createFormInputs(fields).map(f => {\r\n            if(f.id === \"code\"){\r\n                return ({\r\n                    ...f,\r\n                    Comp:createComp((props) => (\r\n                        <Form.Control as=\"textarea\" rows={3} {...props} />\r\n                    ))\r\n                })\r\n            } else return ({...f})\r\n        }),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post(data)\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table2\r\n                cols={cols}\r\n                get={get}\r\n                del={del}\r\n                post={post}\r\n                form={\r\n                    ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...formConfig} />\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\api.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\pages\\Users.tsx",["125","126","127","128"],"import React, {FormEvent, useCallback, useEffect, useState} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Form2,createFields, createFormInputs, createHandleSubmit,Table2} from \"@7casa/clib22-helpers\"\r\n\r\nexport default function Users(){\r\n\r\n\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"users\",\"\")\r\n\r\n    const cols = [\r\n        {\r\n            Header:\"Email\",\r\n            accessor:\"email\",\r\n        },\r\n        {\r\n            Header:\"Display Name\",\r\n            accessor:\"displayName\",\r\n        },\r\n        {\r\n            Header:\"Role\",\r\n            accessor:\"role\",\r\n        },\r\n    ]\r\n\r\n\r\n    const fields = createFields([\r\n        \"email\",\r\n        \"displayName\",\r\n    ],{allRequired:true})\r\n\r\n    const profileFormConfig = {\r\n        inputs:createFormInputs(fields).map(f => {\r\n            if (f.uid === \"role\"){\r\n                const Select = (p:any) => (\r\n                    <Form.Control as=\"select\" {...p} selected={p.defaultValue}>\r\n                        {[\"user\",\"admin\"].map(b => (\r\n                            <option key={b} value={b}>{b}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                )\r\n                return ({...f, Comp:Select})\r\n            } else {\r\n                return f\r\n            }\r\n        }),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post({...data, id:window.auth.currentUser?.email})\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Table2\r\n            cols={cols}\r\n            get={get}\r\n            del={del}\r\n            post={post}\r\n            form={\r\n                ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...profileFormConfig} />\r\n            }\r\n        />\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Release.dev.tsx",[],"C:\\Software\\dzyna100-desktop-app\\src\\firebaseConfig.ts",["129"],"C:\\Software\\dzyna100-desktop-app\\src\\helpers.ts",["130","131"],"import {Puppeteer2MethodProps} from \"./lib/Puppeteer2Methods\";\r\nimport {BrowserWindow, Menu,remote} from \"electron\";\r\n\r\nconst dev = process.env.NODE_ENV === \"development\"\r\nconst prod = process.env.NODE_ENV === \"production\"\r\nconst test = process.env.NODE_ENV === \"test\"\r\n\r\n\r\nexport async function headless(){\r\n    return prod\r\n}\r\n\r\nexport async function puppeteerMethods(data:Puppeteer2MethodProps&{method:string}) {\r\n    if(test||prod){\r\n        const mod = await (await import(\"./lib/Puppeteer2Methods\")).default(data)\r\n        delete require.cache[require.resolve(\"./lib/Puppeteer2Methods\")]\r\n        return mod\r\n    } else {\r\n        const {method, ...rest} = data\r\n        const mod:any = await import(\"./lib/Puppeteer2Methods.dev\")\r\n        delete require.cache[require.resolve(\"./lib/Puppeteer2Methods.dev\")]\r\n        return await mod[method](rest)\r\n    }\r\n}\r\n\r\nconsole.log(93939339)\r\nexport async function browserApp(data:any) {\r\n    return prod ? `--app=${data}` : \"\"\r\n}\r\n\r\n\r\nexport async function appTitle() {\r\n    const t = (dev && \"Dev\") || (test && \"Test\") || \"\"\r\n    const title = \"Dzyna100 SDK \" +t\r\n    return title\r\n}\r\n\r\n\r\nexport async function adminMenus(){\r\n    if(prod||test){\r\n        return window.api.get(\"users\",\"\",\"id\",\"==\",window.auth.currentUser?.email)().then((f:any) => {\r\n            return f[0].admin\r\n        })\r\n    } else {\r\n        return Promise.resolve(true)\r\n    }\r\n}\r\n\r\nexport async function electronLoadUrl(win:BrowserWindow){\r\n\r\n    if(prod){\r\n        win.loadFile(\"build/index.html\")\r\n    } else if(test) {\r\n        win.loadURL(\"http://localhost:5000\")\r\n    } else {\r\n        win.loadURL(\"http://localhost:3000\")\r\n    }\r\n}\r\n//\r\n// export async function electronSetMenu(){\r\n//     if(prod){\r\n//         const menu = Menu.buildFromTemplate([])\r\n//         Menu.setApplicationMenu(menu)\r\n//     }\r\n// }\r\n\r\nexport function getLid(){\r\n    return window.auth.currentUser?.email || \"\"\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.dev.ts",["132","133","134","135"],"import {Puppeteer2ProductProps} from \"./Puppeteer2\";\r\nimport {Browser, Page} from \"puppeteer\";\r\nimport createPuppeteer2Helpers from \"./Puppeteer2Helpers\";\r\nimport vm from \"vm\"\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport interface Puppeteer2MethodProps {\r\n    page: Page\r\n    product: Puppeteer2ProductProps\r\n    browser?: Browser\r\n    helpers: Awaited<ReturnType<typeof createPuppeteer2Helpers>>\r\n    getCode?: () => Promise<string>\r\n}\r\n\r\nfunction createPuppeteer2Method(f:(props:Puppeteer2MethodProps) => Promise<any>){\r\n    return f\r\n}\r\n\r\nexport const createOutlook = createPuppeteer2Method(async ({product,page,helpers}) => {\r\n    const {is,type,click,press,faker,delay,outlook} = helpers\r\n\r\n    const name = faker.name()\r\n    const email = faker.email()\r\n    const dob = faker.dob()\r\n    const password = faker.password()\r\n    const result = {\r\n        name:await faker.name(),\r\n        email:faker.email().split(\"@\")[0]+\"@outlook.com\"\r\n    }\r\n\r\n    if(!page.url().includes(\"live.com\")){\r\n        await page.goto(\"https://outlook.live.com/mail/0/inbox\")\r\n        await click.text({value:\"create free account\"})\r\n    }\r\n    console.log(\"123456\")\r\n    // enter outlook email\r\n    await click.tag({tag:\"body\"})\r\n    await press.tab()\r\n    await press.type(email.split(\"@\")[0])\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(10000)\r\n\r\n    // enter outlook password\r\n    await press.type(password)\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(5000)\r\n\r\n    // enter first/last name\r\n    await press.type(name.split(\" \")[0])\r\n    await press.tab()\r\n    await press.type(name.split(\" \")[1])\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(5000)\r\n\r\n    // select country & enter dob\r\n    const date = dob.getDate()\r\n    const month = dob.getMonth()\r\n    const year = dob.getFullYear()\r\n    await press.tab()\r\n    await press.type(String(date))\r\n    await press.tab()\r\n    await outlook.select.month(month)\r\n    await press.tab()\r\n    await press.type(String(year))\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n\r\n})\r\n\r\nexport const login = createPuppeteer2Method(async ({product,page,helpers:{is,type,click}}) => {\r\n\r\n    const contextObject = { product,page,is,type,click };\r\n    vm.createContext(contextObject);\r\n    vm.runInContext(`\r\n        (async () => {\r\n        if(is.nike()){\r\n        console.log(page.url())\r\n        await page.goto(\"http://nike.com/login\")\r\n        await page.mouse.move(100, 100);\r\n        await page.mouse.move(200, 200);\r\n        await type.text({attr:\"placeholder\",value:\"email address\", text:product.account.email})\r\n        await type.text({attr:\"placeholder\",value:\"password\", text:product.account.password})\r\n        await click.text({attr:\"value\",value:\"sign in\"})\r\n    }\r\n        })()\r\n    `,contextObject)\r\n\r\n})\r\n\r\nexport const homepage = createPuppeteer2Method(async ({product,page,helpers}) => {\r\n    const {is} = helpers;\r\n    if(is.nike()) {\r\n        await page.goto(\"http://nike.com\");\r\n    }\r\n    else {\r\n        throw \"unhandled link\"\r\n    }\r\n})\r\n\r\nexport const checkout = createPuppeteer2Method(async ({product,browser,page,helpers:{click,type,press,delay,exists}}) => {\r\n    const now = new Date()\r\n\r\n    const releaseTime = new Date(product.releaseDate || \"\")\r\n    const released = now > releaseTime\r\n    if(!released) {\r\n        alert(\"product is not released yet\")\r\n        await page.close()\r\n        await browser?.close()\r\n    }\r\n    async function retryLogin(){\r\n        await click.text({tag:\"input\",attr:\"@value\",value:\"Dismiss this error\"})\r\n        await type.text({attr:\"placeholder\",value:\"password\", text:product.account.password})\r\n        await click.text({tag:\"input\",attr:\"@value\",value:\"sign in\"})\r\n        if (await exists.text({value:\"An error occurred.\",attr:\"text()\",tag:\"span\"})){\r\n            await retryLogin()\r\n        }\r\n    }\r\n    let d = false\r\n    page.on('request', async (request) => {\r\n        const url = request.url()\r\n        if(url.includes(\"/merch/skus/v2\") && !url.includes(\"?size=\") && !d){\r\n            d=true\r\n            const _url = new URL(url)\r\n            const params = _url.searchParams.get(\"filter\")\r\n            const productId = params?.match(/(?<=productId\\(\\s*).*?(?=\\s*\\))/gs)?.[0]\r\n            await page.goto(`${product.link}?size=${product.size}&productId=${productId}`)\r\n        } else {\r\n            await request.continue()\r\n        }\r\n    });\r\n    await page.setRequestInterception(true)\r\n    await page.goto(\"http://nike.com/login\")\r\n    await page.mouse.move(100, 100);\r\n    await page.mouse.move(200, 200);\r\n    await type.text({attr:\"placeholder\",value:\"email address\", text:product.account.email})\r\n    await type.text({attr:\"placeholder\",value:\"password\", text:product.account.password})\r\n    // await page.evaluate(() => {\r\n    //     alert(\"manually sign in\")\r\n    // })\r\n    await delay(2000)\r\n    await click.text({tag:\"input\",attr:\"@value\",value:\"sign in\"})\r\n    if (await exists.text({value:\"An error occurred.\",attr:\"text()\",tag:\"span\"})){\r\n        await retryLogin()\r\n    }\r\n\r\n    await page.goto(product.link)\r\n})\r\n\r\nexport const test = createPuppeteer2Method(async ({product,page}) => {\r\n    await page.goto(\"http://google.com\")\r\n})\r\n\r\nexport const getReleaseDate = createPuppeteer2Method(async ({browser,product,page,helpers:{is}}) => {\r\n    await page.goto(product.link)\r\n\r\n    if(is.nike()){\r\n        await page.waitForTimeout(5000)\r\n        const jsHandle = await (await page.$x(\"//*[@class='available-date-component']\"))[0].getProperty(\"textContent\")\r\n        const text = await (await jsHandle).jsonValue() as string\r\n        await page.close()\r\n        await browser?.close()\r\n        return text\r\n    }\r\n})",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":40},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"147","line":2,"column":25,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"148","line":2,"column":31,"nodeType":"144","messageId":"145","endLine":2,"endColumn":41},{"ruleId":"142","severity":1,"message":"149","line":2,"column":43,"nodeType":"144","messageId":"145","endLine":2,"endColumn":54},{"ruleId":"142","severity":1,"message":"150","line":2,"column":56,"nodeType":"144","messageId":"145","endLine":2,"endColumn":62},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"151","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"152","line":1,"column":40,"nodeType":"144","messageId":"145","endLine":1,"endColumn":49},{"ruleId":"142","severity":1,"message":"153","line":1,"column":51,"nodeType":"144","messageId":"145","endLine":1,"endColumn":59},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"151","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"152","line":1,"column":40,"nodeType":"144","messageId":"145","endLine":1,"endColumn":49},{"ruleId":"142","severity":1,"message":"153","line":1,"column":51,"nodeType":"144","messageId":"145","endLine":1,"endColumn":59},{"ruleId":"142","severity":1,"message":"154","line":3,"column":49,"nodeType":"144","messageId":"145","endLine":3,"endColumn":81},{"ruleId":"142","severity":1,"message":"155","line":87,"column":28,"nodeType":"144","messageId":"145","endLine":87,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":15,"column":7,"nodeType":"158","endLine":15,"endColumn":9,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"161","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"152","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"153","line":2,"column":31,"nodeType":"144","messageId":"145","endLine":2,"endColumn":39},{"ruleId":"142","severity":1,"message":"162","line":72,"column":10,"nodeType":"144","messageId":"145","endLine":72,"endColumn":16},{"ruleId":"156","severity":1,"message":"163","line":29,"column":7,"nodeType":"158","endLine":29,"endColumn":9,"suggestions":"164"},{"ruleId":"142","severity":1,"message":"165","line":51,"column":14,"nodeType":"144","messageId":"145","endLine":51,"endColumn":34},{"ruleId":"142","severity":1,"message":"166","line":54,"column":11,"nodeType":"144","messageId":"145","endLine":54,"endColumn":19},{"ruleId":"142","severity":1,"message":"167","line":98,"column":11,"nodeType":"144","messageId":"145","endLine":98,"endColumn":29},{"ruleId":"142","severity":1,"message":"168","line":107,"column":11,"nodeType":"144","messageId":"145","endLine":107,"endColumn":21},{"ruleId":"142","severity":1,"message":"169","line":22,"column":28,"nodeType":"144","messageId":"145","endLine":22,"endColumn":30},{"ruleId":"142","severity":1,"message":"170","line":22,"column":34,"nodeType":"144","messageId":"145","endLine":22,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":34,"column":21,"nodeType":"173","messageId":"174","endLine":34,"endColumn":64},{"ruleId":"142","severity":1,"message":"175","line":9,"column":11,"nodeType":"144","messageId":"145","endLine":9,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"151","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"152","line":1,"column":40,"nodeType":"144","messageId":"145","endLine":1,"endColumn":49},{"ruleId":"142","severity":1,"message":"153","line":1,"column":51,"nodeType":"144","messageId":"145","endLine":1,"endColumn":59},{"ruleId":"176","severity":1,"message":"177","line":1,"column":1,"nodeType":"178","endLine":9,"endColumn":3},{"ruleId":"142","severity":1,"message":"179","line":2,"column":24,"nodeType":"144","messageId":"145","endLine":2,"endColumn":28},{"ruleId":"142","severity":1,"message":"180","line":2,"column":29,"nodeType":"144","messageId":"145","endLine":2,"endColumn":35},{"ruleId":"142","severity":1,"message":"181","line":21,"column":12,"nodeType":"144","messageId":"145","endLine":21,"endColumn":14},{"ruleId":"142","severity":1,"message":"182","line":21,"column":15,"nodeType":"144","messageId":"145","endLine":21,"endColumn":19},{"ruleId":"142","severity":1,"message":"183","line":27,"column":11,"nodeType":"144","messageId":"145","endLine":27,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":96,"column":9,"nodeType":"173","messageId":"174","endLine":96,"endColumn":31},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],["184"],["185"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'FormEvent' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createPuppeteer2ListMenuFunction' is defined but never used.","'get' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array. If 'get' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["186"],"'React' is defined but never used.","'FC' is defined but never used.","'random' is defined but never used.","React Hook useEffect has a missing dependency: 'inputs'. Either include it or remove the dependency array.",["187"],"'someContainsRequired' is defined but never used.","'question' is assigned a value but never used.","'CreateCompFunProps' is defined but never used.","'preserve__' is assigned a value but never used.","'_1' is assigned a value but never used.","'_2' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'lid' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Menu' is defined but never used.","'remote' is defined but never used.","'is' is assigned a value but never used.","'type' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [get]",{"range":"192","text":"193"},"Update the dependencies array to be: [inputs]",{"range":"194","text":"195"},[369,371],"[get]",[926,928],"[inputs]"]