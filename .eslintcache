[{"C:\\Software\\dzyna100-desktop-app\\src\\index.tsx":"1","C:\\Software\\dzyna100-desktop-app\\src\\reportWebVitals.ts":"2","C:\\Software\\dzyna100-desktop-app\\src\\App.tsx":"3","C:\\Software\\dzyna100-desktop-app\\src\\Login.tsx":"4","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Accounts.tsx":"5","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Products.tsx":"6","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Select2.tsx":"7","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2.tsx":"8","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.ts":"9","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Chatbot2.tsx":"10","C:\\Software\\dzyna100-desktop-app\\src\\lib\\faker2.ts":"11","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Helpers.ts":"12","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Puppeteer.tsx":"13","C:\\Software\\dzyna100-desktop-app\\src\\api.ts":"14","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Users.tsx":"15","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Release.dev.tsx":"16","C:\\Software\\dzyna100-desktop-app\\src\\firebaseConfig.ts":"17","C:\\Software\\dzyna100-desktop-app\\src\\helpers.ts":"18","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.dev.ts":"19"},{"size":1697,"mtime":1612005517205,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":859,"mtime":1611943540312,"results":"24","hashOfConfig":"21"},{"size":2854,"mtime":1611949905770,"results":"25","hashOfConfig":"21"},{"size":2229,"mtime":1611826647770,"results":"26","hashOfConfig":"21"},{"size":3460,"mtime":1611937759361,"results":"27","hashOfConfig":"21"},{"size":611,"mtime":1612124158762,"results":"28","hashOfConfig":"21"},{"size":5818,"mtime":1612206924932,"results":"29","hashOfConfig":"21"},{"size":936,"mtime":1612206881462,"results":"30","hashOfConfig":"21"},{"size":5042,"mtime":1611290937282,"results":"31","hashOfConfig":"23"},{"size":472,"mtime":1611826647769,"results":"32","hashOfConfig":"21"},{"size":6986,"mtime":1611926948616,"results":"33","hashOfConfig":"21"},{"size":1882,"mtime":1611944083634,"results":"34","hashOfConfig":"21"},{"size":4192,"mtime":1611826647763,"results":"35","hashOfConfig":"21"},{"size":1882,"mtime":1611826647772,"results":"36","hashOfConfig":"21"},{"size":2196,"mtime":1611826647771,"results":"37","hashOfConfig":"21"},{"size":420,"mtime":1611831390770,"results":"38","hashOfConfig":"21"},{"size":1888,"mtime":1611943581061,"results":"39","hashOfConfig":"21"},{"size":8428,"mtime":1611992233227,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1urovv8",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ntlgl3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"43"},"C:\\Software\\dzyna100-desktop-app\\src\\index.tsx",[],["91","92"],"C:\\Software\\dzyna100-desktop-app\\src\\reportWebVitals.ts",[],["93","94"],"C:\\Software\\dzyna100-desktop-app\\src\\App.tsx",["95"],"import React, {useEffect, createContext, useState} from \"react\";\r\nimport {Router2,createRoutes} from \"@7casa/clib22-helpers\";\r\nimport {adminMenus, appTitle} from \"./helpers\";\r\n\r\n\r\nexport default function App(){\r\n\r\n    const [title,setTitle] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        appTitle().then(setTitle)\r\n    },[])\r\n\r\n\r\n    const authorise = () => {\r\n        return adminMenus()\r\n    }\r\n\r\n\r\n    const routes = createRoutes([\"accounts\",\"products\",\"users\",\"puppeteer\"]).map((f => {\r\n        if (f.uid === \"licences\" || f.uid === \"puppeteer\"){\r\n            return ({\r\n                ...f,\r\n                auth:authorise,\r\n            })\r\n        } else {\r\n            return f\r\n        }\r\n    }))\r\n\r\n    return (\r\n        <Router2 routes={routes} importFn={(file) => import(`./pages/${file}`)} logo={{type:\"image\",value:title}} />\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\Login.tsx",["96","97","98","99","100"],"import React, {FormEvent, useEffect, useState} from \"react\"\r\nimport {Row, Container, Form, InputGroup, FormControl, Button, Spinner} from \"react-bootstrap\";\r\nimport App from \"./App\";\r\nimport firebase from \"firebase/app\"\r\nimport \"firebaseui/dist/firebaseui.css\"\r\n\r\nexport default function Login(){\r\n    const [authorisation, setAuthorisation] = useState<\"loading\" | \"authorised\" | \"not authorised\">(\"loading\")\r\n\r\n    useEffect(() => {\r\n        window.auth.onAuthStateChanged(function(user) {\r\n          if(user) {\r\n              if(user.email){\r\n                  window.api.createCrud(\"users\",\"\").post({\r\n                      id:user.email,\r\n                      displayName:user.displayName,\r\n                      email:user.email,\r\n                      uid:user.uid,\r\n                  })\r\n              }\r\n              setAuthorisation(\"authorised\")\r\n          } else {\r\n              setAuthorisation(\"not authorised\")\r\n          }\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n       if(authorisation === \"not authorised\"){\r\n           window.firebaseAuthUi.start(\"#login\",{\r\n               callbacks: {\r\n                   signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n                       // User successfully signed in.\r\n                       // Return type determines whether we continue the redirect automatically\r\n                       // or whether we leave that to developer to handle.\r\n                       setAuthorisation(\"authorised\")\r\n                       window.api.createCrud(\"users\",\"\").post({\r\n                           id:authResult.user.email,\r\n                           displayName:authResult.user.displayName,\r\n                           email:authResult.user.email,\r\n                           uid:authResult.user.uid,\r\n                       })\r\n                       return true\r\n                   },\r\n                   uiShown: function() {\r\n                       // The widget is rendered.\r\n                       // Hide the loader.\r\n                       // document.getElementById('loader').style.display = 'none';\r\n                       setAuthorisation(\"not authorised\")\r\n                   }\r\n               },\r\n               signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,]\r\n           })\r\n       }\r\n    },[authorisation])\r\n\r\n\r\n    if (authorisation === \"authorised\") return <App />\r\n    else\r\n    return (\r\n        <Container>\r\n            <Row className=\"row align-items-center justify-content-center\" style={{height:\"100vh\"}}>\r\n                {authorisation === \"loading\" && (\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                )}\r\n                <div id=\"login\"></div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Accounts.tsx",["101","102","103","104"],"import React, {FormEvent, useCallback, useEffect, useState} from \"react\";\r\nimport {getLid} from \"../helpers\";\r\nimport {Form2,createFields, createFormInputs, createHandleSubmit,Table2} from \"@7casa/clib22-helpers\";\r\n\r\nexport default function Accounts(){\r\n\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"accounts\",getLid())\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'Account',\r\n            columns: [\r\n                {\r\n                    Header:\"Name\",\r\n                    accessor:\"name\",\r\n                },\r\n                {\r\n                    Header:\"Account Holder\",\r\n                    accessor:(d:any) => {\r\n                        const str = `${d.firstName} ${d.lastName}`\r\n                        return str.substr(0,10)+\"...\"\r\n                    },\r\n                },\r\n                {\r\n                    Header:\"Email\",\r\n                    accessor:\"email\",\r\n                },\r\n                {\r\n                    Header:\"Address\",\r\n                    accessor:(d:any) => {\r\n                        const str = `${d.line1}, ${d.line2}`\r\n                        return str.substr(0,20)+\"...\"\r\n                    },\r\n                }\r\n            ],\r\n        }\r\n    ]\r\n\r\n    const fields = createFields([\r\n        \"name\",\r\n        \"first name\",\r\n        \"last name\",\r\n        \"line1\",\r\n        \"line2\",\r\n        \"line3\",\r\n        \"line4\",\r\n        \"email\",\r\n        \"password\",\r\n        \"phone number\",\r\n    ],{allRequired:true, bulk:true})\r\n\r\n    const profileFormConfig = {\r\n        inputs:createFormInputs(fields),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post(data)\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table2\r\n                cols={cols}\r\n                get={get}\r\n                put={put}\r\n                update={false}\r\n                del={del}\r\n                post={post}\r\n                form={\r\n                    ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...profileFormConfig} />\r\n                }\r\n            />\r\n\r\n        </>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Products.tsx",["105","106","107","108","109"],"import React, {FormEvent, useCallback, useEffect, useState} from \"react\";\r\nimport Select2 from \"../lib/Select2\";\r\nimport {createPuppeteer2, createPuppeteer2List, createPuppeteer2ListMenuFunction} from \"../lib/Puppeteer2\";\r\nimport {Form2,createComp, createFields, createFormInputs, createHandleSubmit,Table2} from \"@7casa/clib22-helpers\"\r\nexport default function Products(){\r\n\r\n    const {\r\n        get:_get,\r\n    } = window.api\r\n\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"products\",window.auth.currentUser?.email!)\r\n\r\n    const {\r\n        get:getAccounts,\r\n    } = window.api.createCrud(\"accounts\",window.auth.currentUser?.email!)\r\n\r\n\r\n    async function getAvailableAccount(){\r\n        const accounts = await getAccounts()\r\n        const products = await get()\r\n        const productAccountIds = products.map((f:any) => f.account.id)\r\n        const availableAccounts = accounts.filter((f:any) => !productAccountIds.includes(f.id))\r\n        return availableAccounts\r\n    }\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'Products',\r\n            columns: [\r\n                {\r\n                    Header:\"Link\",\r\n                    accessor:\"link\",\r\n                },\r\n                {\r\n                    Header:\"Size\",\r\n                    accessor:\"size\",\r\n                },\r\n                {\r\n                    Header:\"Release Date\",\r\n                    accessor:\"releaseDate\",\r\n                },\r\n                {\r\n                    Header:\"Account\",\r\n                    accessor:(d:any) => d.account.name,\r\n                }\r\n            ],\r\n        }\r\n    ]\r\n\r\n\r\n    const getCode = (name:string) => async () => {\r\n        return (await _get(\"puppeteer\",\"\",\"name\",\"==\",name)())[0].code as string\r\n    }\r\n\r\n\r\n    const cols2 = createPuppeteer2List({menus:[\"productPage\",\"loginPage\",\"checkoutQuick\"],getCode})\r\n\r\n    const fields = createFields([\r\n        \"link\",\r\n        \"size\",\r\n        \"account\",\r\n    ],{allRequired:true})\r\n\r\n    const formConfig = {\r\n        inputs:createFormInputs(fields).map(f => {\r\n            if(f.uid === \"account\"){\r\n                return ({\r\n                    ...f,\r\n                    Comp:createComp((props) => (\r\n                        <Select2 get={getAvailableAccount} {...props} />\r\n                    ))\r\n                })\r\n            } else {\r\n                return f\r\n            }\r\n        }),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                if(Array.isArray(data)){\r\n\r\n                } else {\r\n                    const {callMethod} = createPuppeteer2({product:data,options:{headless:true},getCode})\r\n                    const r = await callMethod(\"getReleaseDate\")\r\n                    const {get} = await (await import(\"../lib/Puppeteer2Helpers\")).default({product:data})\r\n                    const releaseDate = get.releaseDate(r)\r\n                    await post({...data, releaseDate})\r\n                }\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table2\r\n                cols={cols}\r\n                cols2={cols2}\r\n                get={get}\r\n                del={del}\r\n                post={post}\r\n                form={\r\n                    ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...formConfig} />\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Select2.tsx",["110"],"import React, {useEffect, useState} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\ninterface Select2Props {\r\n    get: () => Promise<any[]>\r\n    defaultValue:string\r\n    name:string\r\n}\r\nexport default function Select2({get,...rest}:Select2Props){\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n        get().then(setData)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Form.Control as=\"select\" custom {...rest}>\r\n            {data.map((f:any) => (\r\n                <option value={`json__${JSON.stringify(f)}`}>{f.name}</option>\r\n            ))}\r\n        </Form.Control>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2.tsx",["111","112","113","114","115"],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.ts",["116"],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Chatbot2.tsx",["117","118","119","120","121"],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\faker2.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Helpers.ts",["122","123","124","125"],"import {Page} from \"puppeteer\";\r\nimport {Puppeteer2ProductProps} from \"./Puppeteer2\";\r\n\r\nexport interface Puppeteer2HelperProps {\r\n    page?: Page\r\n    product: Puppeteer2ProductProps\r\n}\r\n\r\nconst d = (t:number) => new Promise((resolve) => {\r\n    setTimeout(() => {\r\n        console.log(\"geat3333\")\r\n        resolve(true)\r\n    },t)\r\n})\r\n\r\nexport default async function createPuppeteer2Helpers({page,product}:Puppeteer2HelperProps){\r\n    const faker2 = (await import(\"./faker2\")).default()\r\n\r\n    const is = {\r\n        nike(){\r\n            return product.link.includes(\"nike.com\")\r\n        },\r\n    }\r\n    return ({\r\n        faker:faker2,\r\n        get: {\r\n            releaseDate(text:string){\r\n                if(is.nike()){\r\n                    const [_1,my,_2,time] = text.split(\" \")\r\n                    const [day,month] = my.split(\"/\")\r\n                    const [hour,min] = time.split(\":\")\r\n                    const d = new Date()\r\n                    d.setMonth(Number(month)-1)\r\n                    d.setDate(Number(day))\r\n                    d.setHours(Number(hour))\r\n                    d.setMinutes(Number(min))\r\n                    d.setSeconds(0)\r\n                    const str = d.toISOString().substr(0,16)\r\n                    return str\r\n                } else {\r\n                    throw \"can't get release for unknown store\"\r\n                }\r\n            },\r\n        },\r\n        is,\r\n        ...(page && {\r\n            outlook: {\r\n                select: {\r\n                    async month(number:number){\r\n                        console.log(number,\"peakabook\")\r\n                        switch (number) {\r\n                            case 0: {\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 1: {\r\n                                return await page.keyboard.press(\"F\")\r\n                            }\r\n                            case 2: {\r\n                                return await page.keyboard.press(\"M\")\r\n                            }\r\n                            case 3: {\r\n                                return await page.keyboard.press(\"A\")\r\n                            }\r\n                            case 4:{\r\n                                await page.keyboard.press(\"M\")\r\n                                return await page.keyboard.press(\"M\")\r\n                            }\r\n                            case 5:{\r\n                                await page.keyboard.press(\"J\")\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 6: {\r\n                                await page.keyboard.press(\"J\")\r\n                                await page.keyboard.press(\"J\")\r\n                                return await page.keyboard.press(\"J\")\r\n                            }\r\n                            case 7: {\r\n                                await page.keyboard.press(\"A\")\r\n                                return await page.keyboard.press(\"A\")\r\n                            }\r\n                            case 8: {\r\n                                return await page.keyboard.press(\"S\")\r\n                            }\r\n                            case 9:{\r\n                                return await page.keyboard.press(\"O\")\r\n                            }\r\n                            case 10: {\r\n                                return await page.keyboard.press(\"n\")\r\n                            }\r\n                            case 11: {\r\n                                return await page.keyboard.press(\"d\")\r\n                            }\r\n                            default: {\r\n                                console.log(\"outlook/select/month: did not receive valid month -\",number)\r\n                            }\r\n                        }\r\n                    },\r\n                }\r\n            },\r\n            async delay(time?:number){\r\n                await page.waitForTimeout(time || window.random.number(750,5000))\r\n            },\r\n            exists: {\r\n                async text({value,attr,tag}:{value:string,tag:string,attr:string}){\r\n                    try {\r\n                        await page.waitForXPath(`//${tag || \"*\"}[translate(${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true,timeout:8000});\r\n                        return true\r\n                    } catch (e) {\r\n                        return false\r\n                    }\r\n                },\r\n            },\r\n            type: {\r\n                async text({value,text,attr,delay}:{value:string,text:string,attr:string,delay?:number}){\r\n                    await page.waitForXPath(`//*[translate(@${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true});\r\n                    await (await page.$x(`//*[translate(@${attr}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`))[0].type(text,{delay:window.random.number(50,500)})\r\n                },\r\n            },\r\n            click: {\r\n                async tag({tag}:{tag:string}){\r\n                    await page.waitForXPath(`//${tag}`,{visible: true,});\r\n                    await (await page.$x(`//${tag}`))[0].click({delay:window.random.number(500,3000)})\r\n                },\r\n                async textExact({text,tag}:{tag?:string,text:string}){\r\n                    await page.waitForXPath(`//${tag || \"*\"}[text()='${text}']`,{visible: true});\r\n                    await (await page.$x(`//${tag || \"*\"}[text()='${text}']`))[0].click()\r\n                },\r\n                async text({value,attr,tag}:{value:string,attr?:string,tag?:string}){\r\n                    console.log(attr || 33,\"bink\")\r\n                    await page.waitForXPath(`//${tag || \"*\"}[translate(${attr || \"text()\"}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`,{visible: true});\r\n                    await (await page.$x(`//${tag || \"*\"}[translate(${attr || \"text()\"}, '${value.toUpperCase()}', '${value.toLowerCase()}')='${value.toLowerCase()}']`))[0].click()\r\n                },\r\n                async containTextExact({text,tag,attr}:{text:string,tag:string,attr:string}){\r\n                    await page.waitForXPath(`//${tag}[contains(${attr}, '${text}')]`, {visible:true})\r\n                    await (await page.$x(`//${tag}[contains(${attr}, '${text}')]`))[0].click()\r\n                }\r\n            },\r\n            select(){\r\n\r\n            },\r\n            press: {\r\n                async tab(){\r\n                    await page.keyboard.press(\"Tab\");\r\n                },\r\n                async enter(){\r\n                    await page.keyboard.press(\"Enter\",{delay:window.random.number(750,3000)})\r\n                },\r\n                async type(text:string){\r\n                    await page.keyboard.type(text,{delay:window.random.number(750,2000)})\r\n                }\r\n            }\r\n        })\r\n    })\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Puppeteer.tsx",["126"],"import React from \"react\";\r\nimport {getLid} from \"../helpers\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Table2,createComp, createFields, createFormInputs, createHandleSubmit,Form2} from \"@7casa/clib22-helpers\"\r\n\r\n\r\nexport default function Puppeteer(){\r\n\r\n    const lid = getLid()\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"puppeteer\",\"\")\r\n\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'Puppeteer',\r\n            columns: [\r\n                {\r\n                    Header:\"Name\",\r\n                    accessor:\"name\",\r\n                },\r\n                {\r\n                    Header:\"Code\",\r\n                    accessor:(d:any) => d.code.substr(0,20)+\"...\",\r\n                },\r\n            ],\r\n        }\r\n    ]\r\n\r\n\r\n    const fields = createFields([\r\n        \"name\",\r\n        \"code\",\r\n    ],{allRequired:true})\r\n\r\n    const formConfig = {\r\n        inputs:createFormInputs(fields).map(f => {\r\n            if(f.id === \"code\"){\r\n                return ({\r\n                    ...f,\r\n                    Comp:createComp((props) => (\r\n                        <Form.Control as=\"textarea\" rows={3} {...props} />\r\n                    ))\r\n                })\r\n            } else return ({...f})\r\n        }),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post(data)\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table2\r\n                cols={cols}\r\n                get={get}\r\n                put={put}\r\n                update={true}\r\n                del={del}\r\n                post={post}\r\n                form={\r\n                    ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...formConfig} />\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\api.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\pages\\Users.tsx",["127","128","129","130"],"import React, {FormEvent, useCallback, useEffect, useState} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Form2,createFields, createFormInputs, createHandleSubmit,Table2} from \"@7casa/clib22-helpers\"\r\n\r\nexport default function Users(){\r\n\r\n\r\n\r\n    const {\r\n        get,put,post,del\r\n    } = window.api.createCrud(\"users\",\"\")\r\n\r\n    const cols = [\r\n        {\r\n            Header:\"Email\",\r\n            accessor:\"email\",\r\n        },\r\n        {\r\n            Header:\"Display Name\",\r\n            accessor:\"displayName\",\r\n        },\r\n        {\r\n            Header:\"Role\",\r\n            accessor:\"role\",\r\n        },\r\n    ]\r\n\r\n\r\n    const fields = createFields([\r\n        \"email\",\r\n        \"displayName\",\r\n    ],{allRequired:true})\r\n\r\n    const profileFormConfig = {\r\n        inputs:createFormInputs(fields).map(f => {\r\n            if (f.uid === \"role\"){\r\n                const Select = (p:any) => (\r\n                    <Form.Control as=\"select\" {...p} selected={p.defaultValue}>\r\n                        {[\"user\",\"admin\"].map(b => (\r\n                            <option key={b} value={b}>{b}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                )\r\n                return ({...f, Comp:Select})\r\n            } else {\r\n                return f\r\n            }\r\n        }),\r\n        handleSubmit:createHandleSubmit({\r\n            async onCreate(data){\r\n                await post({...data, id:window.auth.currentUser?.email})\r\n            },\r\n            async onEdit(data){\r\n                await put(data.id, data)\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Table2\r\n            cols={cols}\r\n            get={get}\r\n            del={del}\r\n            post={post}\r\n            form={\r\n                ({data,cleanup}) => <Form2 data={data} cleanup={cleanup} {...profileFormConfig} />\r\n            }\r\n        />\r\n    )\r\n}","C:\\Software\\dzyna100-desktop-app\\src\\pages\\Release.dev.tsx",[],"C:\\Software\\dzyna100-desktop-app\\src\\firebaseConfig.ts",["131"],"export default {\r\n    apiKey: \"AIzaSyCDKOaX6cJWfI0nlvVaZkMDn7cCARjGxSU\",\r\n    authDomain: \"casa-7c-50-dzyna100.firebaseapp.com\",\r\n    databaseURL: \"https://casa-7c-50-dzyna100-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"casa-7c-50-dzyna100\",\r\n    storageBucket: \"casa-7c-50-dzyna100.appspot.com\",\r\n    messagingSenderId: \"1012278151766\",\r\n    appId: \"1:1012278151766:web:c245fc601e7330657cc9f7\"\r\n};","C:\\Software\\dzyna100-desktop-app\\src\\helpers.ts",[],"C:\\Software\\dzyna100-desktop-app\\src\\lib\\Puppeteer2Methods.dev.ts",["132","133","134","135","136","137","138"],"import {Puppeteer2ProductProps} from \"./Puppeteer2\";\r\nimport {Browser, Page} from \"puppeteer\";\r\nimport createPuppeteer2Helpers from \"./Puppeteer2Helpers\";\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport interface Puppeteer2MethodProps {\r\n    page: Page\r\n    product: Puppeteer2ProductProps\r\n    browser?: Browser\r\n    helpers: Awaited<ReturnType<typeof createPuppeteer2Helpers>>\r\n    getCode?: () => Promise<string>\r\n}\r\n\r\nfunction createPuppeteer2Method(f:(props:Puppeteer2MethodProps) => Promise<any>){\r\n    return f\r\n}\r\n\r\n\r\n\r\nexport const createOutlook = createPuppeteer2Method(async ({product,page,helpers}) => {\r\n    const {is,type,click,press,faker,delay,outlook} = helpers\r\n\r\n    const name = faker.name()\r\n    const email = faker.email()\r\n    const dob = faker.dob()\r\n    const password = faker.password()\r\n    const result = {\r\n        name:await faker.name(),\r\n        email:faker.email().split(\"@\")[0]+\"@outlook.com\"\r\n    }\r\n\r\n    if(!page.url().includes(\"live.com\")){\r\n        await page.goto(\"https://outlook.live.com/mail/0/inbox\")\r\n        await click.text({value:\"create free account\"})\r\n    }\r\n    console.log(\"123456\")\r\n    // enter outlook email\r\n    await click.tag({tag:\"body\"})\r\n    await press.tab()\r\n    await press.type(email.split(\"@\")[0])\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(10000)\r\n\r\n    // enter outlook password\r\n    await press.type(password)\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(5000)\r\n\r\n    // enter first/last name\r\n    await press.type(name.split(\" \")[0])\r\n    await press.tab()\r\n    await press.type(name.split(\" \")[1])\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n    await delay(5000)\r\n\r\n    // select country & enter dob\r\n    const date = dob.getDate()\r\n    const month = dob.getMonth()\r\n    const year = dob.getFullYear()\r\n    await press.tab()\r\n    await press.type(String(date))\r\n    await press.tab()\r\n    await outlook.select.month(month)\r\n    await press.tab()\r\n    await press.type(String(year))\r\n    await click.text({value:\"next\",attr:\"@value\",tag:\"input\"})\r\n\r\n})\r\n\r\nexport const login = createPuppeteer2Method(async ({product,page,helpers:{is,type,click,delay,press}}) => {\r\n    if(is.nike()) {\r\n        await page.goto(\"http://nike.com/login\");\r\n\r\n        await Promise.all(Array.from(Array(window.random.number(1,10))).map(async () => {\r\n            await click.tag({tag:\"body\"})\r\n        }))\r\n\r\n\r\n        await type.text({attr: \"placeholder\", value: \"email address\", text: product.account.email});\r\n        await page.mouse.move(1000, 100,{steps:200});\r\n\r\n        if(window.random.bool()){\r\n            await type.text({attr: \"placeholder\", value: \"password\", text: product.account.password});\r\n        } else {\r\n            await press.tab();\r\n            await press.type(product.account.password);\r\n        }\r\n        await page.mouse.move(100, 5000,{steps:200});\r\n\r\n        if(window.random.bool()){\r\n            await press.enter();\r\n        } else {\r\n            await click.text({attr:\"@value\",tag:\"input\",value:\"sign in\"});\r\n        }\r\n    }\r\n})\r\n\r\nexport const loginPage = createPuppeteer2Method(async ({product,page,helpers}) => {\r\n    const {is} = helpers;\r\n    if(is.nike()) {\r\n        await page.goto(\"http://nike.com/login\");\r\n    }\r\n    else {\r\n        throw \"unhandled link\"\r\n    }\r\n})\r\n\r\nexport const productPage = createPuppeteer2Method(async ({product,page,helpers:{is}}) => {\r\n    if(is.nike()) {\r\n        await page.goto(product.link);\r\n    }\r\n    else {\r\n        throw \"unhandled link\"\r\n    }\r\n})\r\n\r\nexport const checkoutQuick = createPuppeteer2Method(async ({product,browser,page,helpers:{is}}) => {\r\n    if(is.nike()) {\r\n        const now = new Date();\r\n        const releaseTime = new Date(product.releaseDate || \"\");\r\n        const released = now > releaseTime;\r\n        if(1+1===9) {\r\n            alert(\"product is not released yet\");\r\n        } else {\r\n            let d = false;\r\n            page.on('request', async (request) => {\r\n                const url = request.url();\r\n                if(url.includes(\"/merch/skus/v2\") && !url.includes(\"?size=\") && !d){\r\n                    d=true;\r\n                    const _url = new URL(url);\r\n                    const params = _url.searchParams.get(\"filter\");\r\n                    const productId = params?.match(/(?<=productId\\(\\s*).*?(?=\\s*\\))/gs)?.[0];\r\n                    await page.goto(`${product.link}?size=${product.size}&productId=${productId}`);\r\n                } else {\r\n                    await request.continue();\r\n                }\r\n            });\r\n            await page.setRequestInterception(true);\r\n            await page.goto(product.link);\r\n        }\r\n    }\r\n    else {\r\n        throw \"unhandled link\"\r\n    }\r\n})\r\n\r\nexport const footlocker = createPuppeteer2Method(async ({product,browser,page,helpers:{is,click,type,press,delay,exists}}) => {\r\n    if(is.nike()){\r\n\r\n    } else if(product.link === \"footlocker\"){\r\n        // // search product\r\n        // await page.goto('https://www.footlocker.com');\r\n        // await page.waitForTimeout(50000)\r\n        //\r\n        // await (await page.waitForSelector('body')).click();\r\n        //\r\n        //\r\n        // await (await page.$x(\"//input[@placeholder='Search']\"))[0].type(task.Product);\r\n        // await page.keyboard.press('Enter')\r\n        //\r\n        //\r\n        // // click size and checkout\r\n        // await clickText({page,text:\"09.0\"})\r\n        // await clickText({page,text:\"add to cart\"})\r\n        // await clickText({page,text:\"view cart\"})\r\n        // await page.waitForTimeout(5000)\r\n        // await clickText({page,text:\"guest checkout\"})\r\n        //\r\n        //\r\n        // // fill personal details\r\n        // await typeText({attr:\"name\",page,name:\"firstname\",text:task.Billing.FirstName})\r\n        // await typeText({attr:\"name\",page,name:\"lastname\",text:task.Billing.LastName})\r\n        // await typeText({attr:\"name\",page,name:\"email\",text:task.Billing.Email})\r\n        // await typeText({attr:\"name\",page,name:\"phone\",text:task.Billing.Phone})\r\n        // await clickText({page,text:\"save & continue\"})\r\n        //\r\n        // // fill shipping address\r\n        // await typeText({attr:\"name\",page,name:\"line1\",text:task.Billing.BillingAddress1})\r\n        // await typeText({attr:\"name\",page,name:\"postalcode\",text:task.Billing.BillingZip})\r\n        // await page.waitForTimeout(5000)\r\n        // await page.keyboard.press('Enter')\r\n        // await (await page.waitForSelector('body')).click();\r\n        // await page.waitForSelector('.global-loading', {hidden: true});\r\n        // await page.waitForTimeout(5000)\r\n        // await page.screenshot({path:\"test.png\"})\r\n        // await page.waitForTimeout(7000)\r\n        //\r\n        // // payment\r\n        // await (await page.$x(\"//label[@for='encryptedCardNumber']/following-sibling::span/iframe\"))[0].click()\r\n        // await page.keyboard.type(task.Billing.CardNumber)\r\n        // await page.waitForTimeout(3000)\r\n        //\r\n        // await (await page.$x(\"//label[@for='encryptedExpiryMonth']/following-sibling::span/iframe\"))[0].click()\r\n        // await page.keyboard.type(task.Billing.CardExpiry.slice(0,2).replace(\"0\",\"\"))\r\n        // await page.waitForTimeout(3000)\r\n        //\r\n        // await (await page.$x(\"//label[@for='encryptedExpiryYear']/following-sibling::span/iframe\"))[0].click()\r\n        // await page.keyboard.type(task.Billing.CardExpiry.slice(2,4))\r\n        //\r\n        // await (await page.$x(\"//label[@for='encryptedSecurityCode']/following-sibling::span/iframe\"))[0].click()\r\n        // await page.keyboard.type(task.Billing.Cvv)\r\n        //\r\n        // await page.waitForTimeout(1000)\r\n        //\r\n        // await clickText({page,text:\"place order\"})\r\n    }\r\n})\r\n\r\nexport const test = createPuppeteer2Method(async ({product,page}) => {\r\n    await page.goto(\"http://google.com\")\r\n})\r\n\r\nexport const getReleaseDate = createPuppeteer2Method(async ({browser,product,page,helpers}) => {\r\n    const {is} = helpers;\r\n\r\n    if(is.nike()){\r\n        await page.goto(product.link);\r\n        await page.waitForTimeout(5000);\r\n        const jsHandle = await (await page.$x(\"//*[@class='available-date-component']\"))[0].getProperty(\"textContent\");\r\n        const text = await jsHandle.jsonValue();\r\n        await page.close();\r\n        await browser?.close();\r\n        return text;\r\n    }\r\n})",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":40},{"ruleId":"145","severity":1,"message":"149","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"150","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":29},{"ruleId":"145","severity":1,"message":"151","line":2,"column":31,"nodeType":"147","messageId":"148","endLine":2,"endColumn":41},{"ruleId":"145","severity":1,"message":"152","line":2,"column":43,"nodeType":"147","messageId":"148","endLine":2,"endColumn":54},{"ruleId":"145","severity":1,"message":"153","line":2,"column":56,"nodeType":"147","messageId":"148","endLine":2,"endColumn":62},{"ruleId":"145","severity":1,"message":"149","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"154","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":38},{"ruleId":"145","severity":1,"message":"155","line":1,"column":40,"nodeType":"147","messageId":"148","endLine":1,"endColumn":49},{"ruleId":"145","severity":1,"message":"156","line":1,"column":51,"nodeType":"147","messageId":"148","endLine":1,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"154","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":38},{"ruleId":"145","severity":1,"message":"155","line":1,"column":40,"nodeType":"147","messageId":"148","endLine":1,"endColumn":49},{"ruleId":"145","severity":1,"message":"156","line":1,"column":51,"nodeType":"147","messageId":"148","endLine":1,"endColumn":59},{"ruleId":"145","severity":1,"message":"157","line":3,"column":49,"nodeType":"147","messageId":"148","endLine":3,"endColumn":81},{"ruleId":"158","severity":1,"message":"159","line":15,"column":7,"nodeType":"160","endLine":15,"endColumn":9,"suggestions":"161"},{"ruleId":"145","severity":1,"message":"162","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"163","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":18},{"ruleId":"145","severity":1,"message":"155","line":2,"column":20,"nodeType":"147","messageId":"148","endLine":2,"endColumn":29},{"ruleId":"145","severity":1,"message":"156","line":2,"column":31,"nodeType":"147","messageId":"148","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"164","line":82,"column":10,"nodeType":"147","messageId":"148","endLine":82,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":22,"column":18,"nodeType":"167","messageId":"168","endLine":22,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":29,"column":7,"nodeType":"160","endLine":29,"endColumn":9,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"171","line":51,"column":14,"nodeType":"147","messageId":"148","endLine":51,"endColumn":34},{"ruleId":"145","severity":1,"message":"172","line":54,"column":11,"nodeType":"147","messageId":"148","endLine":54,"endColumn":19},{"ruleId":"145","severity":1,"message":"173","line":98,"column":11,"nodeType":"147","messageId":"148","endLine":98,"endColumn":29},{"ruleId":"145","severity":1,"message":"174","line":107,"column":11,"nodeType":"147","messageId":"148","endLine":107,"endColumn":21},{"ruleId":"145","severity":1,"message":"175","line":9,"column":7,"nodeType":"147","messageId":"148","endLine":9,"endColumn":8},{"ruleId":"145","severity":1,"message":"176","line":29,"column":28,"nodeType":"147","messageId":"148","endLine":29,"endColumn":30},{"ruleId":"145","severity":1,"message":"177","line":29,"column":34,"nodeType":"147","messageId":"148","endLine":29,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":41,"column":21,"nodeType":"180","messageId":"181","endLine":41,"endColumn":64},{"ruleId":"145","severity":1,"message":"182","line":9,"column":11,"nodeType":"147","messageId":"148","endLine":9,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"154","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":38},{"ruleId":"145","severity":1,"message":"155","line":1,"column":40,"nodeType":"147","messageId":"148","endLine":1,"endColumn":49},{"ruleId":"145","severity":1,"message":"156","line":1,"column":51,"nodeType":"147","messageId":"148","endLine":1,"endColumn":59},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","endLine":9,"endColumn":3},{"ruleId":"145","severity":1,"message":"186","line":22,"column":12,"nodeType":"147","messageId":"148","endLine":22,"endColumn":14},{"ruleId":"145","severity":1,"message":"187","line":22,"column":15,"nodeType":"147","messageId":"148","endLine":22,"endColumn":19},{"ruleId":"145","severity":1,"message":"188","line":28,"column":11,"nodeType":"147","messageId":"148","endLine":28,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":105,"column":9,"nodeType":"180","messageId":"181","endLine":105,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":114,"column":9,"nodeType":"180","messageId":"181","endLine":114,"endColumn":31},{"ruleId":"145","severity":1,"message":"189","line":122,"column":15,"nodeType":"147","messageId":"148","endLine":122,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":144,"column":9,"nodeType":"180","messageId":"181","endLine":144,"endColumn":31},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'FormEvent' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createPuppeteer2ListMenuFunction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array. If 'get' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["192"],"'React' is defined but never used.","'FC' is defined but never used.","'random' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","React Hook useEffect has a missing dependency: 'inputs'. Either include it or remove the dependency array.",["193"],"'someContainsRequired' is defined but never used.","'question' is assigned a value but never used.","'CreateCompFunProps' is defined but never used.","'preserve__' is assigned a value but never used.","'d' is assigned a value but never used.","'_1' is assigned a value but never used.","'_2' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'lid' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'is' is assigned a value but never used.","'type' is assigned a value but never used.","'result' is assigned a value but never used.","'released' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [get]",{"range":"198","text":"199"},"Update the dependencies array to be: [inputs]",{"range":"200","text":"201"},[369,371],"[get]",[926,928],"[inputs]"]